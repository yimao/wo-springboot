debug: true
#
logging.level.root: INFO
logging.level.access: TRACE
logging.level.com.mudcode: TRACE
# log just the SQL
logging.level.org.hibernate.SQL: DEBUG
# log JDBC bind parameters and extracted values
logging.level.org.hibernate.type: TRACE
logging.level.org.hibernate.orm.jdbc.bind: TRACE
logging.level.org.hibernate.orm.jdbc.extract: TRACE
logging.level.org.springframework.jdbc.core.StatementCreatorUtils: TRACE
logging.level.org.springframework.ai: debug
logging.level.org.apache.hc.client5.http.wire: debug
logging.level.org.springframework.web.client.DefaultRestClient: debug
#
# spring mail
spring.mail.protocol: smtp
spring.mail.host: smtpdm.aliyun.com
spring.mail.port: 465
spring.mail.username: yimao@mail.ctlcode.com
spring.mail.password: 64Wpzrpm5FXezrpq
spring.mail.default-encoding: UTF-8
# https://javaee.github.io/javamail/docs/api/com/sun/mail/smtp/package-summary.html
spring.mail.properties.mail.smtp.connectiontimeout: 5000
spring.mail.properties.mail.smtp.timeout: 5000
spring.mail.properties.mail.smtp.writetimeout: 5000
spring.mail.properties.mail.smtp.starttls.enable: true
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.properties.mail.smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory
# custom args
spring.mail.from_name: dev<yimao@mail.ctlcode.com>
#
#
# datasource
spring.datasource.url: jdbc:mysql://mysql-01:3306/hello_world?allowPublicKeyRetrieval=true&autoReconnect=true&characterEncoding=UTF-8&failOverReadOnly=false&rewriteBatchedStatements=true&serverTimezone=Asia/Shanghai&tinyInt1isBit=false&useServerPrepStmts=true&useSSL=false&useUnicode=true
spring.datasource.username: root
spring.datasource.password: Ler3hAIWzHMFvenm
spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
spring.jpa.open-in-view: false
spring.jpa.properties.hibernate.jdbc.batch_size: 200
#
# redis
spring.data.redis.host: redis-01
spring.data.redis.port: 6379
spring.data.redis.database: 0
spring.data.redis.password: xWRUaddJye7SzFdx
spring.data.redis.timeout: 10s
spring.data.redis.lettuce:
  pool:
    enabled: true
    max-active: 8
    max-idle: 8
    min-idle: 1
    max-wait: 5000ms
#
# kafka servers
spring.kafka.bootstrap-servers:
  - kfk-9:9092
  - kfk-10:9092
  - kfk-11:9092
# kafka producer
spring.kafka.producer.batch-size: 1000
spring.kafka.producer.buffer-memory: 10MB
spring.kafka.producer.retries: 3
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
# kafka consumer
spring.kafka.consumer.max-poll-records: 10000
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
# kafka topic
mudcode.kafka.topic.str: q-str
mudcode.kafka.consumer-group.str: cg-str
mudcode.kafka.consumer-concurrency.str: 4
# kafka client
kafka:
  servers: kfk-9:9092,kfk-10:9092,kfk-11:9092
  topic:
    app-message: q-str
  consumer:
    bootstrap.servers: ${kafka.servers}
    group.id: ${spring.application.name}-01
  producer:
    bootstrap.servers: ${kafka.servers}
#
# es
mudcode.es.hosts:
  - https://es-23:9200
  - https://es-24:9200
  - https://es-25:9200
mudcode.es.username: yimao
mudcode.es.password: "0okm9ijn*UHB"
#
# clickhouse
mudcode.clickhouse.cluster: "nbs"
mudcode.clickhouse.database: "ot"
mudcode.clickhouse.endpoints:
  - http://ck-17:8123
  - http://ck-18:8123
mudcode.clickhouse.pops:
  allow_experimental_object_type: 1
  flatten_nested: 0
#
# aliyun oss
oss.endpoint: "oss-cn-beijing.aliyuncs.com"
oss.accessKeyId: ""
oss.accessKeySecret: ""
oss.bucket: "ctlcode"
oss.basedir: "hello-world"
#
# qcloud cos
cos.region: "ap-beijing"
cos.accessKeyId: ""
cos.accessKeySecret: ""
cos.bucket: "ctlcode-1327595278"
cos.basedir: "hello-world"
#
# minio
minio.endpoint: "http://10.1.2.36:9000"
minio.accessKeyId: ""
minio.accessKeySecret: ""
minio.bucket: "hello-world"
